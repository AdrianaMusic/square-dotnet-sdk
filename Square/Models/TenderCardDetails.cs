
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Square;
using Square.Utilities;

namespace Square.Models
{
    public class TenderCardDetails 
    {
        public TenderCardDetails(string status = null,
            Models.Card card = null,
            string entryMethod = null)
        {
            Status = status;
            Card = card;
            EntryMethod = entryMethod;
        }

        /// <summary>
        /// Indicates the card transaction's current status.
        /// </summary>
        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; }

        /// <summary>
        /// Represents the payment details of a card to be used for payments. These
        /// details are determined by the `card_nonce` generated by `SqPaymentForm`.
        /// </summary>
        [JsonProperty("card", NullValueHandling = NullValueHandling.Ignore)]
        public Models.Card Card { get; }

        /// <summary>
        /// Indicates the method used to enter the card's details.
        /// </summary>
        [JsonProperty("entry_method", NullValueHandling = NullValueHandling.Ignore)]
        public string EntryMethod { get; }

        public override string ToString()
        {
            var toStringOutput = new List<string>();

            this.ToString(toStringOutput);

            return $"TenderCardDetails : ({string.Join(", ", toStringOutput)})";
        }

        protected void ToString(List<string> toStringOutput)
        {
            toStringOutput.Add($"Status = {(Status == null ? "null" : Status.ToString())}");
            toStringOutput.Add($"Card = {(Card == null ? "null" : Card.ToString())}");
            toStringOutput.Add($"EntryMethod = {(EntryMethod == null ? "null" : EntryMethod.ToString())}");
        }

        public override bool Equals(object obj)
        {
            if (obj == null)
            {
                return false;
            }

            if (obj == this)
            {
                return true;
            }

            return obj is TenderCardDetails other &&
                ((Status == null && other.Status == null) || (Status?.Equals(other.Status) == true)) &&
                ((Card == null && other.Card == null) || (Card?.Equals(other.Card) == true)) &&
                ((EntryMethod == null && other.EntryMethod == null) || (EntryMethod?.Equals(other.EntryMethod) == true));
        }

        public override int GetHashCode()
        {
            int hashCode = -1919501986;

            if (Status != null)
            {
               hashCode += Status.GetHashCode();
            }

            if (Card != null)
            {
               hashCode += Card.GetHashCode();
            }

            if (EntryMethod != null)
            {
               hashCode += EntryMethod.GetHashCode();
            }

            return hashCode;
        }

        public Builder ToBuilder()
        {
            var builder = new Builder()
                .Status(Status)
                .Card(Card)
                .EntryMethod(EntryMethod);
            return builder;
        }

        public class Builder
        {
            private string status;
            private Models.Card card;
            private string entryMethod;



            public Builder Status(string status)
            {
                this.status = status;
                return this;
            }

            public Builder Card(Models.Card card)
            {
                this.card = card;
                return this;
            }

            public Builder EntryMethod(string entryMethod)
            {
                this.entryMethod = entryMethod;
                return this;
            }

            public TenderCardDetails Build()
            {
                return new TenderCardDetails(status,
                    card,
                    entryMethod);
            }
        }
    }
}